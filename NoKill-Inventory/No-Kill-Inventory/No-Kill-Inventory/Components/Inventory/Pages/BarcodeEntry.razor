@page "/Inventory/BarcodeEntry"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using Microsoft.EntityFrameworkCore
@using No_Kill_Inventory.Data
@inject ApplicationDbContext Context
@rendermode InteractiveServer

@attribute [Authorize]

<MudText Typo="Typo.h4">Barcode Entry</MudText>

<MudPaper Class="pa-16 ma-2" Outlined="true">
    <MudStack Spacing="4" AlignItems="AlignItems.Center">
        @if (_submitted)
        {
            <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Success" >Food Type Added!</MudText>
            <MudButton Variant="Variant.Filled" OnClick="@NewForm" Color="Color.Primary">
                <MudText>Add More?</MudText>
            </MudButton>
            
        }
        else
        {
            <MudTextField @bind-Value="_nickName" Label="Enter Nickname for Barcode" Placeholder="Ex: Wet Adult Dog Food" FullWidth="true" AdornmentColor="Color.Primary"></MudTextField>
            <MudSelect @bind-Value="_enumValue" Label="Select Species" Placeholder="Please Select" FullWidth="true" AdornmentColor="Color.Primary">
                @foreach (Species Item in Enum.GetValues(typeof(Species)))
                {
                    <MudSelectItem Value="@Item">@Item</MudSelectItem>
                }
            </MudSelect>
            @if (_enumValue == Species.Other)
            {
                <MudTextField @bind-Value="_animalName" Label="Enter the Animal's species" Placeholder="Ex: Hamster" FullWidth="true" AdornmentColor="Color.Primary"></MudTextField>
            }
            <MudSelect @bind-Value="_age" Label="Select Age" Placeholder="Please Select" FullWidth="true" AdornmentColor="Color.Primary">
                @foreach (Age age in Enum.GetValues(typeof(Age)))
                {
                    <MudSelectItem Value="@age">@age</MudSelectItem>
                }
            </MudSelect>
            <MudSelect @bind-Value="_foodType" Label="Select Food Type" Placeholder="Please Select" FullWidth="true" AdornmentColor="Color.Primary">
                @foreach (FoodType type in Enum.GetValues(typeof(FoodType)))
                {
                    <MudSelectItem Value="@type">@type</MudSelectItem>
                }
            </MudSelect>
            <MudSelect @bind-Value="_prescription" Label="Is this prescription?" Placeholder="Please Select" FullWidth="true" AdornmentColor="Color.Primary">
                <MudSelectItem Value="false">False</MudSelectItem>
                <MudSelectItem Value="true">True</MudSelectItem>
            </MudSelect>

            <MudButton Disabled="@_processing" Variant="Variant.Filled" OnClick="AddPallet" Color="Color.Primary">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Medium" Indeterminate="true"/>
                    <MudText Class="ms-2">Processing</MudText>
                }
                else
                {
                    <MudText>Add Barcode</MudText>
                }
            </MudButton>
            @if (_error)
            {
                <MudText Color="Color.Error">One or more fields are blank. Please fill out all fields to submit form.</MudText>
            }
        }
    </MudStack>
</MudPaper>


@code {
    private bool _processing = false;
    private bool _submitted = false;
    private bool _error = false;

    private Species _enumValue;
    private String _nickName;
    private String _animalName;
    private Age _age;
    private FoodType _foodType;
    private bool _prescription;
    
    
    async Task AddPallet()
    {
        _processing = true;

        if (_enumValue == null || _age == null || _foodType == null || _nickName == null)
        {
            _error = true;
            _processing = false;
        }
        else
        {
            Context.Barcodes.Add( new Barcode
            {
                Name = _nickName,
                Animal = _enumValue,
                AnimalName = _animalName,
                Age = _age,
                FoodType = _foodType,
                Prescription = _prescription
            });
        
            await Context.SaveChangesAsync();
            
            _submitted = true;
        }

        _processing = false;
    }

    async Task NewForm()
    {
        _enumValue = Species.Dog;
        _nickName = "";
        _animalName = "";
        _age = Age.Adult;
        _foodType = FoodType.Dry;
        _prescription = false;

        _submitted = false;
    }
}