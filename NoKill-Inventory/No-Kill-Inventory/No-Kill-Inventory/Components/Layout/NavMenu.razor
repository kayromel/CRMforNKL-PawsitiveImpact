@implements IDisposable

@inject NavigationManager NavigationManager
@*
    This page is the side bar navigation menu
*@

<MudNavMenu>
    <AuthorizeView>
            <Authorized>
                <!--Dashboard Link-->
                <!--<MudNavLink Href="" Icon="@Icons.Material.Filled.House" Match="NavLinkMatch.All">Dashboard</MudNavLink>-->
                
                <!--Schedule Link-->
                <MudNavLink Href="/" Icon="@Icons.Material.Filled.CalendarMonth" Match="NavLinkMatch.All">Schedule</MudNavLink>

                <!--Volunteer Information Link-->
                <MudNavLink Href="/volunteer-information" Icon="@Icons.Material.Filled.Person" Match="NavLinkMatch.All">Volunteer Information</MudNavLink> 

                <!--Inventory Links-->
                <MudNavGroup Title="Inventory" Icon="@Icons.Material.Filled.Inventory" Expanded="true">
                    <MudNavLink Href="/Inventory/InventoryEntry" Icon="@Icons.Material.Filled.Inventory" Match="NavLinkMatch.Prefix">Enter Inventory</MudNavLink>
                    <MudNavLink Href="/Inventory/ViewInventory" Icon="@Icons.Material.Filled.Inventory" Match="NavLinkMatch.Prefix">View Inventory</MudNavLink>
                    <MudNavLink Href="/Inventory/ViewOldInventory" Icon="@Icons.Material.Filled.Inventory" Match="NavLinkMatch.Prefix">View Old Inventory</MudNavLink>
                    <MudNavLink Href="/Inventory/BarcodeEntry" Icon="@Icons.Material.Filled.Inventory" Match="NavLinkMatch.Prefix">Barcode Entry</MudNavLink>
                    <MudNavLink Href="/Inventory/ViewBarcodes" Icon="@Icons.Material.Filled.Inventory" Match="NavLinkMatch.Prefix">View Barcodes</MudNavLink>
                </MudNavGroup>
                
                @* 
                    Restricting certain items in the nav bar to Admins only
                *@
                <AuthorizeView Roles="Admin" Context="adminContext">
                    <!--User Management Links-->
                    <MudNavGroup Title="Users" Icon="@Icons.Material.Filled.VerifiedUser" Expanded="true">
                        <MudNavLink Href="auth" Icon="@Icons.Material.Filled.VerifiedUser" Match="NavLinkMatch.Prefix">Manage Users</MudNavLink>
                        <MudNavLink Href="Account/Register" Icon="@Icons.Material.Filled.VerifiedUser" Match="NavLinkMatch.Prefix">Add Users</MudNavLink>
                    </MudNavGroup>

                    <!--Recipient Management Links-->
                  <MudNavGroup Title="Recipients" Icon="@Icons.Material.Filled.SupervisedUserCircle" Expanded="true">
                        <MudNavLink Href="/Recipients/Manage" Icon="@Icons.Material.Filled.SupervisedUserCircle" Match="NavLinkMatch.Prefix">Manage Recipients</MudNavLink>
                        <MudNavLink Href="/Recipients/Entry" Icon="@Icons.Material.Filled.SupervisedUserCircle" Match="NavLinkMatch.Prefix">Add Recipients</MudNavLink>
                    </MudNavGroup>
                </AuthorizeView>

                <MudNavLink Href="/Notifications" Icon="@Icons.Material.Filled.NotificationsActive" Match="NavLinkMatch.Prefix">Notifications</MudNavLink>
                
                <MudNavLink Href="Account/Manage/ChangePassword" Icon="@Icons.Material.Filled.ManageAccounts">@context.User.Identity?.Name</MudNavLink>
                
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken/>
                        <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                        <MudButton StartIcon="@Icons.Material.Filled.Logout" Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Logout</MudButton>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <MudNavLink Href="Account/Login" Icon="@Icons.Material.Filled.Login" Match="NavLinkMatch.All">Login</MudNavLink>
            </NotAuthorized>
        </AuthorizeView>
</MudNavMenu>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}